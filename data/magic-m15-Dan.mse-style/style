mse version: 2.0.0
game: magic
short name: M15 Extra Udelude
full name: Udelude's M15 Template
icon: card-sample.png
installer group: magic/m15 style/normal cards/udelude
position hint: 050

version: 2018-02-09
depends on:
	package: magic.mse-game
	version: 2015-04-08
depends on:
	package: magic-default-image.mse-include
	version: 2007-09-23
depends on:
	package: magic-mana-large-extra-udelude.mse-symbol-font
	version: 2014-03-11
depends on:
	package: magic-mana-small-extra-udelude.mse-symbol-font
	version: 2014-03-11
depends on:
	package: magic-pt-symbols-extra-m15.mse-symbol-font
	version: 2014-03-20

card width: 750
card height: 1046
card dpi: 30
############################################################## Extra scripts
init script:
	# Load scripts that are redefined from the game file
	include file: game_scripts
	
	# Load scripts that are redefined from the blends package
	include file: blends_scripts
	
	# Load font profiles
	include file: font_new
	include file: font_phyrexian
	include file: font_old
	include file: font_m15
	# Load scripts for image box
	include file: /magic-default-image.mse-include/scripts
	
	
	# Should hybrids have a grey name?
	mask_hybrid_with_land := { contains(styling.regular_options, match:"grey hybrid names") }
	
	#Should multicolor lands with basic land types have a colored name?
	mask_multi_land_with_color := { contains(styling.regular_options, match:"colored multicolor land names") }
	
	template_prefix := [card: "" card2: "" pt: "" stamp: "" identity: ""]
	template_suffix := [card: "card.jpg" card2: "card2.jpg" pt: "pt.png" stamp: "stamp.jpg" identity: "identity.png"]
	template      := { template_prefix[type] + input + template_suffix[type] }
	land_template := { template_prefix[type] + (if input == "a" or input == "s" then "c" else input) + "l" + template_suffix[type] }
	# Use land templates for previews because they show more contrast
	hybrid_previews := "land,hybrid"
	
	# Use the normal tap symbol
	mana_t := {
		if      styling.tap_symbol == "old"        then "old"
		else if styling.tap_symbol == "diagonal T" then "older"
		else                                            "new"
	}
	
	# Use guild mana symbols?
	guild_mana := { contains(styling.regular_options, match:"guild mana symbols") }
	
	# Filter to commas, so they can be counted to see if field is complete
	comma_count := filter_text@(match:",")
	
	# Interpret the font profile choice.
	font_profile := {
		if styling.font_style == "Phyrexian" then "phyrexian"
		else if styling.font_style == "Before 8th Edition" then "old"
		else if styling.font_style == "After 8th Edition" then "new"
		else "m15"
	}
	
	font_field := {
		if font_profile() == "new" then (
			if field == "name" then font_name_new[value]
			else if field == "type" then font_type_new[value]
			else if field == "text" then font_text_new[value]
			else if field == "pt" then font_pt_new[value]
			else font_pt_new[value]
		)
		else if font_profile() == "phyrexian" then (
			if field == "name" then font_name_phyrexian[value]
			else if field == "type" then font_type_phyrexian[value]
			else if field == "text" then font_text_phyrexian[value]
			else if field == "pt" then font_pt_phyrexian[value]
			else font_pt_phyrexian[value]
		)
		else if font_profile() == "old" then (
			if field == "name" then font_name_old[value]
			else if field == "type" then font_type_old[value]
			else if field == "text" then font_text_old[value]
			else if field == "pt" then font_pt_old[value]
			else font_pt_old[value]
		)else(
			if field == "name" then font_name_m15[value]
			else if field == "type" then font_type_m15[value]
			else if field == "text" then font_text_m15[value]
			else if field == "pt" then font_pt_m15[value]
			else font_pt_m15[value]
		)
	}
	
	# Is the card a promo card?
	is_promo := { styling.promo }
	is_unsorted := { contains(styling.regular_options, match:"remove from autocount") }
############################################################## Set info fields
set info style:
	symbol:
		variation:
			name: invertedcommon
			border radius: 0.10
			fill type: solid
			fill color:   rgb(255,255,255)
			border color: rgb(0,0,0)
############################################################## Extra style options
styling field:
	type: choice
	name: font style
	description: Which font style should be used?
	choice: After Magic 2015
	choice: After 8th Edition
	choice: Before 8th Edition
	choice: Phyrexian
	initial: After Magic 2015
styling field:
	type: multiple choice
	name: regular options
	description: Which regular styling options would you like to use?
	choice: center text
	choice: color indicator dot
	choice: colored multicolor land names
	choice: grey hybrid names
	choice: guild mana symbols
	choice: holofoil stamped rares
	choice: promo rarity
	choice: inverted common symbol
	choice: remove from autocount
	initial: colored multicolor land names, grey hybrid names, holofoil stamped rares
styling field:
	type: multiple choice
	name: extras
	description: Which extra options would you like to use?
	choice: pichoro's alchemist watermark
	choice: alpha style dual lands
	choice: card creator credit field
	choice: takeabow's clock watermark
	choice: advent's colored xyz mana
	choice: circeus' colorless-colored hybrid
	choice: anuttymous' frost effect
	choice: holiday promo text
	choice: dark nova's runes
	choice: lesurgo's spell-land hybrid
	choice: circeus' tinged artifact hybrid
	choice: type symbol with name
	choice: unsorted casting cost
styling field:
	type: choice
	name: tap symbol
	description: What tap and untap symbols should be used on cards?
	initial: modern
	choice: modern
	choice: old
	choice: diagonal T
styling field:
	type: package choice
	name: text box mana symbols
	match: magic-mana-*.mse-symbol-font
	initial: magic-mana-small-extra-udelude.mse-symbol-font
styling field:
	type: package choice
	name: pt box symbols
	match: magic-pt-symbols-*.mse-symbol-font
	initial: magic-pt-symbols-extra.mse-symbol-font
styling field:
	type: package choice
	name: overlay
	description: Should there be an overlay applied, such as foil?
	match: magic-overlay-*.mse-include
	required: false
styling field:
	type: choice
	name: outer color
	description: Should the outside of the frame be a special color?
	choice: default
	choice: white
	choice: blue
	choice: black
	choice: red
	choice: green
	choice: purple
	choice: pink
	choice: yellow
	choice: orange
	choice: brown
	choice: artifact
	choice: snow
	choice: multicolor
	choice: spectral
	choice: colorless
styling field:
	type: choice
	name: trim color
	description: Should the trim of the frame be a special color?
	choice: default
	choice: white
	choice: blue
	choice: black
	choice: red
	choice: green
	choice: purple
	choice: pink
	choice: yellow
	choice: orange
	choice: brown
	choice: artifact
	choice: snow
	choice: multicolor
	choice: spectral
	choice: colorless
styling field:
	type: choice
	name: inner color
	description: Should the inside of the frame be a special color?
	choice: default
	choice: white
	choice: blue
	choice: black
	choice: red
	choice: green
	choice: purple
	choice: pink
	choice: yellow
	choice: orange
	choice: brown
	choice: artifact
	choice: snow
	choice: multicolor
	choice: spectral
	choice: colorless
styling field:
	type: text
	name: popout image style
	description: The styling instructions for the popout image field, formatted as "left,top,width,height,". The text MUST end with a comma.
styling style:
	tap symbol:
		render style: both
		choice images:
			modern:     /magic-mana-large-extra-udelude.mse-symbol-font/mana_t.png
			old:        /magic-mana-large-extra-udelude.mse-symbol-font/mana_t_old.png
			diagonal T: /magic-mana-large-extra-udelude.mse-symbol-font/mana_t_older.png
	regular options:
		render style: checklist
		direction: vertical
	extras:
		render style: checklist
		direction: vertical
############################################################## Card fields
card style:
	############################# Background stuff
	############################# Name line
	name:
		left:
			{ if card.card_symbol=="none" and (card.type_symbol=="none" or not contains(styling.extras, match:"type symbol with name")) then 64
			else if card.card_symbol == "none" then 98
			else if card.type_symbol == "none" or ( not contains(styling.extras, match:"type symbol with name")) then 98
			else 134}
		top: { font_field(field: "name", value: "top")}
		right:  { 682 - card_style.casting_cost.content_width }
		height: 76
		alignment: bottom shrink-overflow
		padding bottom: 0
		z index: 1
		font:
			name: { font_field(field: "name", value: "name")}
			size: 34
			weight: { font_field(field: "name", value: "weight")}
			color: black
	casting cost:
		right: 692
		top: 58
		width: { max(30, card_style.casting_cost.content_width) + 5 }
		height: 46
		alignment: middle right
		font:
			name: MPlantin
			size: 30
		symbol font:
			name: magic-mana-large-extra-udelude
			size: 30
			alignment: middle right
		always symbol: true
		z index: 2
		padding top: 0
	card symbol:
		left:
			{if card.card_symbol == "none" then 40
			else if card.type_symbol == "none" or not contains(styling.extras, match:"type symbol with name") then 60
			else 100}
		top: {if card.card_symbol == "none" then 80 else 58}
		height: 40
		width: 28
		z index: 1
		render style: image
		choice images:
			tombstone: tombstone.png
	type symbol:
		left: {if card.type_symbol == "none" or not contains(styling.extras, match:"type symbol with name") then 36 else 54}
		top: {if card.type_symbol == "none" or not contains(styling.extras, match:"type symbol with name") then 40 else 60}
		width: 42
		height: 40
		z index: 5
		render style: image
		alignment: middle center
		visible: { contains(styling.extras, match:"type symbol with name") }
		choice images:
			artifact: type-symbols/artifact_black.png
			creature: type-symbols/creature_black.png
			enchantment: type-symbols/enchantment_black.png
			instant: type-symbols/instant_black.png
			land: type-symbols/land_black.png
			multitype: type-symbols/multitype_black.png
			sorcery: type-symbols/sorcery_black.png
			planeswalker: type-symbols/planeswalker_black.png
			structure: type-symbols/structure_black.png
	############################# Image
	image:
		left: 58
		top: 120
		width: 632
		height:	462
		z index: 1
		default: {default_image(card.card_color)}
	image 2:
		left: {if comma_count(styling.popout_image_style) == ",,,," then split_text(match:",", styling.popout_image_style).0 else "0"}
		top: {if comma_count(styling.popout_image_style) == ",,,," then split_text(match:",", styling.popout_image_style).1 else "0"}
		width: {if comma_count(styling.popout_image_style) == ",,,," then split_text(match:",", styling.popout_image_style).2 else "0"}
		height: {if comma_count(styling.popout_image_style) == ",,,," then split_text(match:",", styling.popout_image_style).3 else "0"}
		z index: 1
	############################# Card type
	indicator:
		left: 62
		top: 600
		width: 34
		height: 34
		z index: 2
		render style: image
		visible: { has_identity() }
		image: { card_identity() }
	type:
		left: { if has_identity() then "104" else "64" }
		top: 592
		width: { (if has_identity() then "580" else "600") - max(22,card_style.rarity.content_width) }
		height: 40
		alignment: top shrink-overflow
		z index: 2
		padding top: 2
		font:
			name: { font_field(field: "type", value: "name")}
			size: 28
			weight: { font_field(field: "type", value: "weight")}
			color: black
			separator color: red
	rarity:
		right: 688
		top: 594
		width: 88
		height: 44
		z index: 2
		render style: image
		alignment: middle right
		choice images:
			# Images based on the set symbol
			basic land:
				script:
					if contains(styling.regular_options, match:"inverted common symbol") then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			common:
				script:
					if contains(styling.regular_options, match:"inverted common symbol") then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			uncommon:   script: symbol_variation(symbol: set.symbol, variation: "uncommon")
			rare:       script: symbol_variation(symbol: set.symbol, variation: "rare")
			mythic rare:       script: symbol_variation(symbol: set.symbol, variation: "mythic rare")
			special:    script: symbol_variation(symbol: set.symbol, variation: "special")
			masterpiece: script: symbol_variation(symbol: set.masterpiece_symbol, variation: "mythic rare")
	############################# Text box
	text:
		left: 48
		top: 654
		width: 628
		height: 308
		font:
			name: { font_field(field: "text", value: "name")}
			italic name: { font_field(field: "text", value: "italic")}
			size: 28
			weight: { font_field(field: "text", value: "weight")}
			scale down to: 16
			color: black
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: 28
		alignment:
			script:
				if contains(styling.regular_options, match:"center text") then "middle center"
				else "middle left"
		z index: 2
		padding left:   12
		padding right:  8
		line height hard: 1.2
		line height line: 1.5
		line height soft: 0.9
		line height hard max: 1.3
		line height line max: 1.6
	############################# PT
	pt:
		z index: 2
		left: 572
		top: 938
		width: 120
		height:	56
		alignment: center middle shrink-overflow
		font:
			name: { font_field(field: "pt", value: "name")}
			size: 32
			weight: { font_field(field: "pt", value: "weight")}
			color: black
			separator color: red
		symbol font:
			name: {styling.pt_box_symbols}
			size: 16
			alignment: middle right
	############################# Card sorting / numbering
	set code:
		left: 48
		top: 996
		width: 80
		height: 20
		z index: 1
		font:
			name: Relay-Medium
			size: 14
			color: white
			weight: bold
	############################# Copyright stuff
	illustrator:
		left: { 88 + card_style.set_code.content_width }
		top: 995
		width: 400
		height: 20
		z index: 1
		font:
			name: Beleren Small Caps Bold
			size: 15
			color: white
	copyright:
		right: 700
		top: { if card.pt != "" then 1000 else 976 }
		width: 280
		height: 20
		z index: 2
		visible: {not set.automatic_copyright}
		alignment: middle right shrink-overflow
		font:
			name: Matrix
			size: 14
			color: white
			weight: bold
############################################################## Extra card fields
extra card field:
	type: text
	name: card code
	save value: false
	script:
		if set.automatic_card_numbers and not is_unsorted() then
			forward_editor(prefix: card_number_m15() + "/" + card_count_m15() + " " + rarity_code() + " ", field: card.card_code_text)
		else
			combined_editor(field1: card.custom_card_number, separator: " " + rarity_code() + " ", field2: card.card_code_text)
extra card field:
	type: choice
	name: artist arrow
	editable: false
	save value: false
	choice: white
	save value: false
extra card field:
	type: multiple choice
	name: stamp
	empty choice: colorless
	choice: white
	choice: blue
	choice: black
	choice: red
	choice: green
	choice: purple
	choice: yellow
	choice: orange
	choice: brown
	choice:
		name: pink
		line below: true
	choice: artifact
	choice: snow
	choice: land
	choice: multicolor
	choice: spectral
	choice:
		name: hybrid
		line below: true
	choice:
		name: horizontal
		type: radio
	choice:
		name: vertical
		type: radio
	choice:
		name: radial
		type: radio
	choice:
		name: diagonal
		type: radio
	choice:
		name: overlay
		type: radio
	choice:
		name: reversed
	script: card_color_filter(value)
	default: card_color(casting_cost: card.casting_cost, rules_text: card.rule_text, type: card.super_type, watermark: card.watermark, card_name: card.name)
extra card field:
	type: multiple choice
	name: pt box
	empty choice: colorless
	choice: white
	choice: blue
	choice: black
	choice: red
	choice: green
	choice: purple
	choice: yellow
	choice: orange
	choice: brown
	choice:
		name: pink
		line below: true
	choice: artifact
	choice: snow
	choice: land
	choice: multicolor
	choice: spectral
	choice:
		name: hybrid
		line below: true
	choice:
		name: horizontal
		type: radio
	choice:
		name: vertical
		type: radio
	choice:
		name: radial
		type: radio
	choice:
		name: diagonal
		type: radio
	choice:
		name: overlay
		type: radio
	choice:
		name: reversed
	script: card_color_filter(value)
	default: card_color(casting_cost: card.casting_cost, rules_text: card.rule_text, type: card.super_type, watermark: card.watermark, card_name: card.name)
extra card field:
	type: choice
	name: foil stamp
	choice: stamp
	save value: false
	editable: false
extra card field:
	type: choice
	name: foil layer
	choice: foil
	save value: false
	editable: false
extra card field:
	type: choice
	name: emblem
	include file: watermarks/watermark-names
extra card field:
	type: text
	name: creator computer
	save value: false
	editable: false
	show statistics: false
	script: ":"
extra card field:
	type: text
	name: creator
	save value: true
	show statistics: false
	editable: true
extra card field:
	type: multiple choice
	name: frame
	empty choice: colorless
	choice: white
	choice: blue
	choice: black
	choice: red
	choice: green
	choice: purple
	choice: yellow
	choice: orange
	choice: brown
	choice:
		name: pink
		line below: true
	choice: artifact
	choice: snow
	choice: land
	choice: multicolor
	choice: spectral
	choice:
		name: hybrid
		line below: true
	choice:
		name: horizontal
		type: radio
	choice:
		name: vertical
		type: radio
	choice:
		name: radial
		type: radio
	choice:
		name: diagonal
		type: radio
	choice:
		name: overlay
		type: radio
	choice:
		name: reversed
	script: card_color_filter(value)
	default: card_color(casting_cost: card.casting_cost, rules_text: card.rule_text, type: card.super_type, watermark: card.watermark, card_name: card.name)
extra card style:
	card code:
		left: 48
		top: 976
		width: 240
		height: 20
		z index: 1
		font:
			name: Relay-Medium
			size: 14
			color: white
			weight: bold
	artist arrow:
		left: { 56 + card_style.set_code.content_width }
		top: 1000
		width: 24
		height: 14
		z index: 1
		render style: image
		image: artist_arrow.png
	pt box:
		left: 546
		top: 932
		width: 162
		height:	84
		z index: 1
		visible: { card.pt != "" }
		render style: image
		image: { card_ptbox() }
	frame:
		left:	0
		top:	0
		width:	750
		height:	1046
		z index: 0
		render style: image
		popup style: in place
		image: { card_background() }